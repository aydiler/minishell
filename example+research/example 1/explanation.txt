This minishell implementation is a simplified shell program that mimics some functionalities of a Unix shell. Here's a high-level overview of how it works:

1. Initialization
The main function in minishell.c sets up signal handlers for SIGINT and SIGCHLD:

SIGINT (Ctrl+C) is handled by handle_sigint, which ignores the signal and re-prompts the user.
SIGCHLD (child process termination) is handled by handle_sigchld, which waits for all child processes that have exited and prints a message.
2. Read-Eval-Print Loop (REPL)
The ft_repl function (not shown in the provided excerpts) is likely responsible for the main loop of the shell. It reads user input, evaluates it, and prints the result.

3. Tokenization
The input command line is tokenized into individual tokens using the tokenizer function in lexer.c. This function breaks the input into tokens such as words, operators, and quotes.

4. Parsing
The tokens are parsed into a command structure using functions like make_simple_cmd and make_word_list in parser.c. This structure represents the command and its arguments, redirections, and other components.

5. Execution
The parsed command structure is executed by the ft_executor function in ms_executor.c. This function handles:

Built-in commands using ft_is_builtin and ft_builtin.
External commands by forking a new process and executing the command using ft_fork_execute and ft_execute.
6. Built-in Commands
Built-in commands like echo, cd, pwd, export, and unset are implemented in various functions in ms_builtins.c.

7. Redirections
Input and output redirections are handled by functions like ft_redir_handler and ft_ex_prio in ms_ex_redir.c.

8. Cleanup
After executing the commands, resources are cleaned up using functions like ft_clear_be and ft_clear_ast in ms_cleanup_utils.c.

9. Error Handling
Errors are handled by functions like ft_wait_error in ms_error.c, which waits for child processes and checks their exit statuses.

Key Components
Signal Handling: handle_sigint and handle_sigchld.
Tokenization: tokenizer, tokenize_word, tokenize_operator.
Parsing: make_simple_cmd, make_word_list.
Execution: ft_executor, ft_fork_execute, ft_execute.
Built-ins: ft_is_builtin, ft_builtin.
Redirections: ft_redir_handler, ft_ex_prio.
Cleanup: ft_clear_be, ft_clear_ast.
Error Handling: ft_wait_error.
